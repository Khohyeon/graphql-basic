# Root쿼리를 정의 (조회)
# 조회 요청을 할때 getAllActors를 요청하고 반환값은 Actor객체가 됨을 의미
# getActorById 요청시 보내는 파라미터는 id로 정의하며 id는 Int타입을 의미
type Query{
    getAllActors:[Actor],
    getActorById(id:Int):Actor
}

# Root뮤테이션을 정의 (등록,수정,삭제)
# updateAddress 요청시 Int타입의 id값과 String타입의 address값을 파라미터로 보내며 Actor 객체를 받겠다는 의미
# input타입을 정의하여 입력 파라미터 값을 묶어서 사용할 수 있음
type Mutation{
    # 매개변수 id는 int타입, adress는 문자열 타입
    # 반환값은 Actor
    updateAddress(id:Int, address:String):Actor,
    # Input값을 정의
    updateAddressByInputObject(input:AddressInput):Actor
}

# Actor객체를 정의
# actorId는 고유한 정수값을 나타내기 위해 ID로 정의, !가 붙으면 값이 null이 되면 안된다는 의미
type Actor{
    actorId:ID!,
    firstName:String,
    lastName:String,
    dob:String,
    address:String,
    filmId:Int
    film:Film # film도 가져올 수 있도록 정의
    # 소스코드내의 Actor객체에 Filme객체가 정의되어있지 않아도 Film을 가져올 수 있음
}

# Film객체를 정의
type Film{
    filmId:ID!,
    name:String,
    regDt:String
}
# 입력 파라미터로 사용될 입력타입의 AddressInput을 정의
input AddressInput{
    actorId:Int,
    address:String
}